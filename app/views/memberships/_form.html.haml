= form_for([current_group, @membership], :html => {:class => "form-horizontal"}) do |f|
  - if @membership.errors.any?
    #error_explanation
      %h2
        = pluralize(@membership.errors.count, "error")
        prohibited this membership from being saved:
      %ul
        - @membership.errors.full_messages.each do |msg|
          %li= msg
  .form-group
    .col-sm-6
      = f.label :member_id, :class => "control-label"
      .controls
        = f.collection_select :member_id, @users, :id, :email, {}, :class =>'form-control'
    //- Show this only if role is different than "Member"
    #resources-search.col-sm-6{:style => 'display: none;'}
      %label.control-label Choosing a language or a property
      %input#resources-search-field.form-control{:autocomplete => "off", :placeholder => "Languages", :type => "text"}
  .form-group{:style => "min-height: 80px;"}
    .col-sm-6
      = f.label :role, :class => "control-label"
      .controls
        //- Simplify the interface: levels and roles in a single field
        //- TODO: Remember to wrap and capitalize roles
        = f.collection_select :role, Membership::ACCESS_LEVELS | Membership::ROLES, :to_s, :to_s, {}, :class =>'form-control'
    #resources-list.col-sm-6{:style => 'display: none;'}
      = f.hidden_field 'resources', :value => ''
      %label.control-label
        Selected Resources (
        %a#remove-resources{:href => "#Clean"} Clean
        )
      .controls
        %ul#selected-resources
          -if @lings.present?
            - @lings.each do |ling|
              %li{ :data => {:id => ling.id} }
                %a.remove-resource{:href => '#Remove'}
                  %span.glyphicon.glyphicon-remove.shift-down
                #{ling.name}
  .form-group
    .col-sm-6
      .controls
        = link_to group_memberships_path(current_group), :class => "btn btn-default" do
          %span.glyphicon.glyphicon-arrow-left
          Back
        = f.submit :class => "btn btn-success"

- content_for :scripts do
  :javascript

    var lingsDictURL = "#{group_lings_all_path(current_group)}";

    $(function(){

      var lingsName = "#{current_group.ling_names.map(&:pluralize).join(' - ')}";

      var resourceId = 'resources';
      enableRolesPanel();

      // Setup the Typeahead matcher engine
      var lingDictionary = Terraling.Search.createDictionary(lingsName, 'expert', lingsDictURL);

      Terraling.Search.create(resourceId +'-search-field', [lingDictionary]);
      Terraling.Search.onSelection(onLingSelected);

      var buttonTemplate = Handlebars.compile('<li data-id="{{id}}"><a class="remove-resource" href="#Remove"><span class="glyphicon glyphicon-remove shift-down"></a> {{name}}</li>');

      var resourcesDict;
      mapResourcesRoles();

      function mapResourcesRoles(){
        resourcesDict = {};
        $('#selected-resources li').each( function(){
          resourcesDict[$(this).text()] = ''+$(this).data('id');
        });
      }

      function removeLanguage(evt){
        var item = $(this).parent();

        var name = item.text().substring(1);

        delete resourcesDict[name];

        item.remove();
        // refresh hidden field values
        updateResourceField();

        evt.preventDefault();
      }

      function removeLanguages(evt) {
        $('#selected-resources li').each( function () {
            var item = $(this);
            item.remove();
        });
        // clear the cache
        resourcesDict = {};

        updateResourceField();
        
        evt.preventDefault();
      }

      function updateResourceField(){
        $('#membership_'+resourceId).val($.map(resourcesDict, function(value){
          return value;
        }).join(';'));
      }

      function onLingSelected(evt, ling, name){

        if(!resourcesDict[ling.name]){

          resourcesDict[ling.name] = ''+ling.id;

          $('#selected-resources').append(buttonTemplate(ling));
        }

        updateResourceField();

        $('#'+resourceId+'-search-field').typeahead('val', '');

      }

      function enableRolesPanel(){

        var isValidRole = $('#membership_role').val() === 'expert';
        $('#'+resourceId + '-search , #'+resourceId + '-list ').toggle(isValidRole);

      }
      
      $('#membership_role').change(enableRolesPanel);

      $('body')
          .on('click', '#remove-resources', removeLanguages)
          .on('click', '.remove-resource' , removeLanguage);

    });
