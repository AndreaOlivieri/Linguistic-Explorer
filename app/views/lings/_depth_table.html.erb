<h1>Listing <%= current_group.ling_name_for_depth(depth).pluralize %></h1>
<div class="apple_pagination">
<!-- render page links in the view: -->
<%= will_paginate lings %>
</div>
<table>
  <tr>
    <th>Name</th>
    <% if current_group.has_depth? %>
      <th><%= current_group.ling_name_for_depth(depth - 1) %></th>
    <% end %>
    <% current_group.ling_storable_keys.each do |key| %>
      <th><%= key.humanize %></th>
    <% end %>
    <th></th>
    <th></th>
    <th></th>
  </tr>
  <% lings.each do |ling| %>
    <tr>
      <td><%= link_to ling.name, [current_group, ling] %></td>
      <% if current_group.has_depth? %>
        <td><%= (link_to ling.parent.name, group_ling_path(current_group, ling.parent)) if ling.parent %></td>
      <% end %>
      <% current_group.ling_storable_keys.each do |key| %>
        <td><%= ling.stored_value(key) %></td>
      <% end %>
      <td><% if can? :create, LingsProperty.new{|lp| lp.group = current_group} %>
        <%= link_to 'Mass assign', set_values_group_ling_path(current_group, ling) %>
      <% end %></td>
      <td><% if can? :edit, ling %>
        <%= link_to 'Edit', edit_group_ling_path(current_group, ling) %>
      <% end %></td>
      <td><% if can? :destroy, ling %>
        <%= link_to 'Destroy', [current_group, ling], :confirm => 'Are you sure?', :method => :delete %>
      <% end %></td>
    </tr>
  <% end %>
</table>
<div class="apple_pagination">
<!-- render page links in the view: -->
<%= will_paginate lings %>
</div>
<% if can? :create, Ling.new{|l| l.group = current_group} %>
  <%= link_to "New #{current_group.ling_name_for_depth(depth)}", new_group_ling_path(current_group, :depth => depth) %>
<% end %>
