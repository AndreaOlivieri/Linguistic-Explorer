/ = javascript_tag "$.getScript(location.href);"
- page_heading @ling.grouped_name
%h1
  = @ling.grouped_name
  = @ling.name
.row
  .col-md-6
    = link_to group_lings_depth_path(current_group, @ling.depth), :class => "btn btn-default" do
      %i.glyphicon.glyphicon-arrow-left
      Back
    -if can_see?(:manage, @ling)
      .pull-right
        = link_to supported_set_values_group_ling_path(current_group, @ling), :class => "btn btn-primary" do
          = icon 'edit', "Edit #{current_group.lings_property_name.pluralize}"
        = link_to edit_group_ling_path(current_group, @ling), :class => "btn btn-primary" do
          = icon 'edit', "Edit #{@ling.grouped_name}"
.row
  .col-md-6
    %table.show-table.table.table-bordered.table-hover.table-striped.ling-table
      %tr
        %td
          %b Type:
        %td= current_group.ling_name_for_depth(@ling.depth)
      %tr
        %td
          %b Name:
        %td
          = @ling.name
      - @ling.storable_keys.each do |key|
        - if @ling.stored_value(key) != ""
          %tr
            %td
              %b
                = key.humanize
                \:
            %td= @ling.stored_value(key)
      - if @ling.depth == 1 && @ling.parent
        %tr
          %td
            %b
              = current_group.ling0_name
              \:
          %td
            = link_to @ling.parent.name, group_ling_path(current_group, @ling.parent)
      - elsif @ling.depth == 0 && !@ling.children.empty?
        %tr
          %td
            %b
              = current_group.ling1_name.pluralize
              \:
          %td
            - @ling.children.each do |child|
              = link_to child.name, group_ling_path(current_group, child)
      %tr
        %td
          %b Created by:
        %td
          = @ling.creator ? @ling.creator.name : "Unknown user"
  #analysis-container.col-md-6.border
    .row
      #analysis.col-md-12.relative
        %h3 Quick Analysis
        %h5
          Add languages to compare with #{@ling.name}
        %input#auto_compare.input-block-level.autocomplete.search-query{:autocomplete => "off", :disabled => "", :placeholder => "Loading...", :type => "text"}/
      #languages-container.col-md-5.hidden.search-buttons
        Selected languages (
        %a.remove-langs{:href => "/Clear All"} clear all
        )
        %ul#selected-lings
    .row.relative
      #compare-buttons.col-md-12.search-buttons
        %a#compare-lings.btn.btn-default.btn-block{:disabled => "disabled", :href => "#Search"}
          =icon 'search', 'Compare Properties'
        %a#compare-tree.btn.btn-default.btn-block{:disabled => "disabled", :href => "#Search"}
          = icon 'search', 'Similarity Tree'
        %a#map.btn.btn-default.btn-block{:href => "#Map"}
          = icon 'globe', 'See it on a Map'
%br/
#pagination_table.values
  #pagination_top.apple_pagination.will-paginate
    / render page links in the view:
    = will_paginate @values, renderer: BootstrapPagination::Rails
  %table.show-table.table.table-bordered.table-striped.table-hover
    %thead
      %th.col-md-2= current_group.property_name
      %th.col-md-2= current_group.lings_property_name
      %th.col-md-6= current_group.example_name.pluralize
      %th.col-md-2 Creator
    %tbody
      - @values.each do |value|
        %tr
          %td= link_to value.property.name, [current_group, value.property]
          %td= value.value
          - elps = ExamplesLingsProperty.find_all_by_lings_property_id(value.id)
          %td.align-left
            - elps.each do |elp|
              - example = elp.example
              = link_to(display_example(example.id, current_group.display_style), [current_group, example]) if elp
          %td= (value.creator ? value.creator.name : "")
  #pagination_bottom.apple_pagination.will-paginate
    / render page links in the view:
    = will_paginate @values, renderer: BootstrapPagination::Rails
%br/
= link_to group_lings_depth_path(current_group, @ling.depth), :class => "btn btn-default" do
  %i.glyphicon.glyphicon-arrow-left
  Back
-if can?(:manage, @ling) && current_user.is_expert_of?(@ling)
  = link_to supported_set_values_group_ling_path(current_group, @ling), :class => "btn btn-primary" do
    = icon 'edit', "Supported Edit #{current_group.lings_property_name.pluralize}"
  = link_to edit_group_ling_path(current_group, @ling), :class => "btn btn-primary" do
    = icon 'edit', "Edit #{@ling.grouped_name}"

- content_for :scripts do
  :javascript
    var group = #{current_group.to_param},
        id    = #{@ling.id};
